@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Exercise04_B";

    var pid = Request.QueryString["pid"];
    if (pid.IsEmpty())
    {
        Response.Redirect("Exercise04_A.cshtml");
    }
    var title = Request.Form["Title"];
    var Artistid = Request.Form["ArtistId"];
    var AlbumId = Request.Form["AlbumId"];
    var releaseyear = Request.Form["ReleaseYear"];
    var releaselabel = Request.Form["ReleaseLabel"];
    var button = Request.Form["Button"];
    AlbumId = pid;
    var db = Database.Open("CDB");

    var artcommand = "SELECT ArtistId, Name FROM Artists ORDER BY name";
    var artresult = db.Query(artcommand);

    var artStatement = "SELECT AlbumId, Title, ArtistId, ReleaseYear, ReleaseLabel " +
      "FROM Albums " +
      "WHERE AlbumId = @0";
    var artProducts = db.QuerySingle(artStatement, pid);

    Validation.Add("Title",
        Validator.Required("Title is required"),
        Validator.StringLength(160, 0, "Title is limited to 160 characters"));

    Validation.Add("ArtistId",
        Validator.Required("Artist Id is required"));

    Validation.Add("ReleaseYear",
        Validator.Required("Release year is required"),
        Validator.Range(1950, 2019, "Year is out range, 1950 to today"));

    Validation.Add("ReleaseLabel",
        Validator.Required("Release Label is required"),
        Validator.StringLength(50, 0, "Label is limited to 50 characters"));

}

@section pagetitle{
    <h1>Exercise 4: Update and Delete</h1>
}
@if (IsPost)
{
    if (button.Equals("cancel"))
    {
        <p>
            <span style="color:brown">
                Action cancelled. Return to artist search for new Album.
            </span>
            <a href="~/ExercisePages/Exercise04_A.cshtml">go to search ....</a>

        </p>
        AlbumId = "";
    }
    else if (button.Equals("delete"))
    {
        var valid = true;

        if (string.IsNullOrEmpty(AlbumId))
        {
            valid = false;
            <div class="col-12 text-center">
                <p>
                    <span style="color:brown">
                        Missing Album ID. Return to Album search for new Album.
                    </span>
                    <a href="~/ExercisePages/Exercise04_A.cshtml"> go to search ....</a>
                </p>
            </div>
        }
        if (valid)
        {
            try
            {
                var delcommand = "DELETE Albums WHERE AlbumId = @0";
                int result = db.Execute(delcommand, AlbumId);
                if (result == 0)
                {
                    <div class="col-12 text-center">
                        <p>
                            <span style="color:brown">
                                Album not found on file. Delete not done. Return to Album search for new Album.
                            </span>
                            <a href="~/ExercisePages/Exercise04_A.cshtml"> go to search ....</a>
                        </p>
                    </div>
                }
                else
                {
                    <div class="col-12 text-center">
                        <p style="color:green">
                            Album has been deleted. Return to Album search for new Album.
                        </p>
                        <a href="~/ExercisePages/Exercise04_A.cshtml"> go to search ....</a>
                    </div>
                }
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
    else
    {
        var valid = true;
        if (AlbumId.Equals("0"))
        {
            valid = false;
            <div class="col-12 text-center">
                <p style="color:darkslateblue">
                    You must select a category
                </p>
            </div>
        }
        if (string.IsNullOrEmpty(AlbumId))
        {
            valid = false;
            <div class="col-12 text-center">
                <p>
                    <span style="color:brown">
                        No album deletable. Return to Album search for new Album.
                    </span>
                    <a href="~/ExercisePages/Exercise04_A.cshtml"> go to search ....</a>
            </div>
        }
        if (valid)
        {
            try
            {
                var updatecommand = "UPDATE Albums " +
                                "SET Title =@0, " +
                                "ArtistId = @1, " +
                                "ReleaseYear = @2, " +
                                "ReleaseLabel = @3 " +
                                "WHERE AlbumId = @4 ";
                int results = db.Execute(updatecommand, title,
                        Artistid.Equals("0") ? null : Artistid,
                        string.IsNullOrEmpty(releaseyear) ? null : releaseyear,
                        string.IsNullOrEmpty(releaselabel) ? null : releaselabel, AlbumId);
                if (results > 0)
                {
                    <div class="col-12 text-center">
                        <p style="color:green">
                            Product has been updated
                        </p>
                    </div>
                }
                else
                {
                    <div class="col-12 text-center">
                        <p>
                            <span style="color:brown">
                                Album not found on file. Update not done. Return to Album search for new Album.
                            </span>
                            <a href="~/ExercisePages/Exercise04_A.cshtml"> go to search ....</a>
                        </p>
                    </div>
                }

            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }

    }
}
else
{
    AlbumId = artProducts.AlbumId.ToString();
    title = artProducts.Title;
    Artistid = artProducts.ArtistId == null ? "0" : artProducts.ArtistId.ToString();
    releaseyear = artProducts.ReleaseYear == null ? "" : artProducts.ReleaseYear.ToString();
    releaselabel = artProducts.ReleaseLabel == null ? "" : artProducts.ReleaseLabel.ToString();
}

<div class="form-group">

    <form id="theForm" action="" method="post">
        <div class="row">
            <div class="col-6 text-right">
                <label id="AlbumId">Album ID</label><br />
                <label id="Title">Title</label><br />
                <label id="ArtistId">Artist ID</label><br />
                <label id="ReleaseYear">Release Year</label><br />
                <label id="ReleaseLabel">Release Label</label><br />
            </div>
            <div class="col-6 text-left">
                <input type="text" name="AlbumId" value="@AlbumId" readonly /><br />
                <input type="text" name="Title" value="@title" /><br />
                <select name="ArtistId">
                    option value="0">Select....</option>
                    @foreach (var acollectionrow in artresult)
                    {
                        if (acollectionrow[0].ToString() == Artistid)
                        {
                            <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                        }
                        else
                        {
                            <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                        }
                    }
                </select><br />
                <input type="text" name="ReleaseYear" value="@releaseyear" /><br />
                <input type="text" name="ReleaseLabel" value="@releaselabel" /><br /><br />
            </div>
            <div class="col-12 text-center">
                <button type="submit" name="button" id="theUpdate" class="btn btn-primary"
                        value="update">
                    Update
                </button>&nbsp;&nbsp;&nbsp;
                <button type="submit" name="button" id="theDelete" class="btn btn-primary" formnovalidate
                        value="delete">
                    Discontinued
                </button>&nbsp;&nbsp;&nbsp;
                <button type="submit" name="button" id="theCancel" class="btn btn-primary" formnovalidate
                        value="cancel">
                    Cancel
                </button>
            </div>
        </div>
        <script type="text/javascript">
            document.getElementById("theDelete").onclick = ConfirmDelete;
            function ConfirmDelete() {
                return confirm("Are you sure you want to delete @title?");
            }
        </script>
    </form>
</div>
